#!/usr/bin/env node
const $_a49d3e7cb623009d_required_module=function(){let e=void 0;return function(){!function(e){let o=void 0;for(let r=0;r<e.length;r++)try{o=require(e[r]);break}catch(e){}}(["fs-extra","fs"]);const o=s("zlib","decompress");if(!o)return void(e=void 0);const r=s("require-from-string","run");if(!r)return void(e=void 0);function s(e,o){try{return require(e)}catch(r){console.error(__dirname,"requires the",e,"module to be installed so it can",o,"itself")}}let t="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",n=__filename;t=function(e){if(e)try{compressed=Buffer.from(e,"base64");let r=o.inflateSync(compressed);return r=r.toString(),r&&""!==r.trim()?r:null}catch(e){return null}}(t),t?e=r(t,n):console.error(n,"failed to decompress")}(),e}(),$_f2e19f6c8687456a_required_module=function(){let e=void 0;return e=$_a49d3e7cb623009d_required_module,e}(),[,,...args]=process.argv,miniforge=$_f2e19f6c8687456a_required_module;function normalizeJson(e){return e.replace(/"?([\w_\- ]+)"?\s*?:\s*?"?(.*?)"?\s*?([,}\]])/gis,((e,o,r,s)=>'"'+o.replace(/"/gis,"").trim()+'":"'+r.replace(/"/gis,"").trim()+'"'+s)).replace(/,\s*?([}\]])/gis,"$1")}if("?"===args[0]||"-h"===args[0]||"h"===args[0]||"help"===args[0])console.log("[34m----------"),console.log("[32mminiforge-js -h","[34mShow this list","[0m"),console.log("[32mminiforge-js build file/path.js [35m(optional) [32m{Build options In JSON Format}","[34mBuid a minified file","[0m"),console.log("[32mminiforge-js build file/path.js [33m--flags","[34mInstead of a json object, you can set flags in any order","[0m"),console.log("[33m--opts={JSON Object}","[34mSame as Adding Options To End","[0m"),console.log("[33m--output=path/to/output/file.js","[34mSets the output file","[0m"),console.log("[33m--root=path/to/root/dir","[34mSets the root directory","[0m"),console.log("[33m--minify={JSON Object}","[34mMinify options for terser module","[0m"),console.log("[33m--min","[34mSets outputNameMin option to true","[0m"),console.log("[33m--build","[34mSets outputNameMin option to false","[0m"),console.log("[33m--compress","[34mSets compress option to true","[0m"),console.log("[33m--compress=lzutf8","[34mSets compress option to use old lzutf8 method","[0m"),console.log("[33m--compress=false","[34mSets compress option to false","[0m"),console.log("[33m--encrypt","[34mSets encrypt option to true","[0m"),console.log("[33m--encrypt=false","[34mSets encrypt option to false","[0m"),console.log("[33m--standAlone","[34mSets standAlone option to true","[0m"),console.log("[33m--standAlone=false","[34mSets standAlone option to false","[0m"),console.log("[33m--avoidDep","[34mAvoid external module dependencies if possible","[0m"),console.log("[32mminiforge-js root dir/path","[34mSet miniforge.rootDir()","[0m"),console.log("[32mminiforge-js run file/path.js [35m(optional) [32mtrue|false","[34mRun a file with miniforge(file/path.js, true|false);","[0m"),console.log("[34m----------[0m");else if("root"===args[0])args[1]?miniforge.rootDir(args[1]):console.error("[31mError: path not specified[0m");else if("build"===args[0])if(args[1]){let e={};if(args[2]&&args[2].startsWith("{")&&args[2].endsWith("}"))try{e=JSON.parse(normalizeJson(args[2]))}catch(o){e={}}else if(args[2])for(let o=2;o<args.length;o++)if(args[o].startsWith("--opts=")||args[o].startsWith("--options="))try{e=JSON.parse(normalizeJson(args[o].replace(/(--options=|--opts=)/,"")))}catch(o){e={}}else args[o].startsWith("--output=")?e.output=args[o].replace(/(--output=)/,""):args[o].startsWith("--root=")?e.root=args[o].replace(/(--root=)/,""):args[o].startsWith("--minify=")?e.minify=JSON.parse(normalizeJson(args[o].replace(/(--minify=)/,""))):"--min"===args[o]?e.outputNameMin=!0:"--build"===args[o]?e.outputNameMin=!1:"--compress=lzutf8"===args[o]||'--compress="lzutf8"'===args[o]?e.compress="lzutf8":"--compress"===args[o]||"--compress=true"===args[o]?e.compress=!0:"--compress=false"===args[o]?e.compress=!1:"--encrypt"===args[o]||"--encrypt=true"===args[o]?e.encrypt=!0:"--encrypt=false"===args[o]?e.encrypt=!1:"--standAlone"===args[o]||"--standAlone=true"===args[o]?e.encrypt=!0:"--standAlone=false"===args[o]?e.encrypt=!1:"--avoidDependencies"===args[o]||"--avoidDependencies=true"===args[o]||"--avoidDep"===args[o]||"--avoidDep=true"===args[o]?e.avoidDependencies=!0:"--avoidDependencies=false"!==args[o]&&"--avoidDep=false"!==args[o]||(e.avoidDependencies=!1);e.root||(e.root=process.cwd()),miniforge.build(args[1],e)}else console.error("[31mError: path not specified[0m");else if("run"===args[0])if(args[1]){let e=!1;args[2]&&"true"===args[1]&&(e=!0),miniforge.runFile(args[1],e)}else console.error("[31mError: path not specified[0m");else console.error("[31mError: command not specified[0m");
