#!/usr/bin/env node
const e=function(){let e=void 0;return function(){!function(e){let o=void 0;for(let t=0;t<e.length;t++)try{o=require(e[t]);break}catch(e){}}(["fs-extra","fs"]);const o=s("zlib","decompress");if(!o)return void(e=void 0);const t=s("require-from-string","run");if(!t)return void(e=void 0);function s(e,o){try{return require(e)}catch(t){console.error(__dirname,"requires the",e,"module to be installed so it can",o,"itself")}}let r="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",n=__filename;r=function(e){if(e)try{compressed=Buffer.from(e,"base64");let t=o.inflateSync(compressed);return t=t.toString(),t&&""!==t.trim()?t:null}catch(e){return null}}(r),r?e=t(r,n):console.error(n,"failed to decompress")}(),e}(),o=function(){let o=void 0;return o=e,o}(),[,,...t]=process.argv,s=o;function r(e){return e.replace(/"?([\w_\- ]+)"?\s*?:\s*?"?(.*?)"?\s*?([,}\]])/gis,(e,o,t,s)=>'"'+o.replace(/"/gis,"").trim()+'":"'+t.replace(/"/gis,"").trim()+'"'+s).replace(/,\s*?([}\]])/gis,"$1")}if("?"===t[0]||"-h"===t[0]||"h"===t[0]||"help"===t[0])console.log("[34m----------"),console.log("[32mminiforge-js -h","[34mShow this list","[0m"),console.log("[32mminiforge-js build file/path.js [35m(optional) [32m{Build options In JSON Format}","[34mBuid a minified file","[0m"),console.log("[32mminiforge-js build file/path.js [33m--flags","[34mInstead of a json object, you can set flags in any order","[0m"),console.log("[33m--opts={JSON Object}","[34mSame as Adding Options To End","[0m"),console.log("[33m--output=path/to/output/file.js","[34mSets the output file","[0m"),console.log("[33m--root=path/to/root/dir","[34mSets the root directory","[0m"),console.log("[33m--minify={JSON Object}","[34mMinify options for terser module","[0m"),console.log("[33m--min","[34mSets outputNameMin option to true","[0m"),console.log("[33m--build","[34mSets outputNameMin option to false","[0m"),console.log("[33m--compress","[34mSets compress option to true","[0m"),console.log("[33m--compress=lzutf8","[34mSets compress option to use old lzutf8 method","[0m"),console.log("[33m--compress=false","[34mSets compress option to false","[0m"),console.log("[33m--encrypt","[34mSets encrypt option to true","[0m"),console.log("[33m--encrypt=false","[34mSets encrypt option to false","[0m"),console.log("[33m--standAlone","[34mSets standAlone option to true","[0m"),console.log("[33m--standAlone=false","[34mSets standAlone option to false","[0m"),console.log("[33m--avoidDep","[34mAvoid external module dependencies if possible","[0m"),console.log("[32mminiforge-js root dir/path","[34mSet miniforge.rootDir()","[0m"),console.log("[32mminiforge-js run file/path.js [35m(optional) [32mtrue|false","[34mRun a file with miniforge(file/path.js, true|false);","[0m"),console.log("[34m----------[0m");else if("root"===t[0])t[1]?s.rootDir(t[1]):console.error("[31mError: path not specified[0m");else if("build"===t[0])if(t[1]){let e={};if(t[2]&&t[2].startsWith("{")&&t[2].endsWith("}"))try{e=JSON.parse(r(t[2]))}catch(o){e={}}else if(t[2])for(let o=2;o<t.length;o++)if(t[o].startsWith("--opts=")||t[o].startsWith("--options="))try{e=JSON.parse(r(t[o].replace(/(--options=|--opts=)/,"")))}catch(o){e={}}else t[o].startsWith("--output=")?e.output=t[o].replace(/(--output=)/,""):t[o].startsWith("--root=")?e.root=t[o].replace(/(--root=)/,""):t[o].startsWith("--minify=")?e.minify=JSON.parse(r(t[o].replace(/(--minify=)/,""))):"--min"===t[o]?e.outputNameMin=!0:"--build"===t[o]?e.outputNameMin=!1:"--compress=lzutf8"===t[o]||'--compress="lzutf8"'===t[o]?e.compress="lzutf8":"--compress"===t[o]||"--compress=true"===t[o]?e.compress=!0:"--compress=false"===t[o]?e.compress=!1:"--encrypt"===t[o]||"--encrypt=true"===t[o]?e.encrypt=!0:"--encrypt=false"===t[o]?e.encrypt=!1:"--standAlone"===t[o]||"--standAlone=true"===t[o]?e.encrypt=!0:"--standAlone=false"===t[o]?e.encrypt=!1:"--avoidDependencies"===t[o]||"--avoidDependencies=true"===t[o]||"--avoidDep"===t[o]||"--avoidDep=true"===t[o]?e.avoidDependencies=!0:"--avoidDependencies=false"!==t[o]&&"--avoidDep=false"!==t[o]||(e.avoidDependencies=!1);e.root||(e.root=process.cwd()),s.build(t[1],e)}else console.error("[31mError: path not specified[0m");else if("run"===t[0])if(t[1]){let e=!1;t[2]&&"true"===t[1]&&(e=!0),s.runFile(t[1],e)}else console.error("[31mError: path not specified[0m");else console.error("[31mError: command not specified[0m");
