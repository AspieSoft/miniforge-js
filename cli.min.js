#!/usr/bin/env node
const $_71e1949843cb6dc4_required_module=function(){let e;return function(){!function(e){let o;for(let r=0;r<e.length;r++)try{o=require(e[r]);break}catch(e){}}(["fs-extra","fs"]);const o=s("zlib","decompress");if(!o)return void(e=void 0);const r=s("require-from-string","run");if(!r)return void(e=void 0);function s(e,o){try{return require(e)}catch(r){console.error(__dirname,"requires the",e,"module to be installed so it can",o,"itself")}}let t="eJztW3t347aV/yoU4zUJC6Zsb5qmUljPy9lNms7MmUna05UUm5YgmxmKVAnIM67E/ey9Fw8SfEi2M2n/2W16xiR4cXFxX/gBuJplKRfOgoc5+/s6zpnvLrhL6CoSt1UTvkHjZhmn8eK+qD4IlnOWw6cf/uenH7/9uvqQ/GMtFl/Dh38k8XXVjG/QOMvvVyKrmtU7fHgpH75/3/x0/AsKpRu/zbPle5HH6U1Fph+OF/DtmMuPLhklTDh5lolXcZ5GSzaaycmqWbxZiRheww2bLaPh2cnZCf3A2OpylkScIzUf9k5ADzDB4YbfsusovYGWgs6y5SpnnA+bPeN0AZzFverHOXD4HRXZ6jJnIorT4dhdZvN1wlzq3iTZdZTAA3xa5yk8rPJsBkzdKRX3K5YtYPTTgi5h0ATG75AMRGD5HZs/km1RjCJ+n86cxTqd4cy1Gr6NE+YLysJNQTZSX+EmCIKajorRm+tf2EwEMH58k/o5ZUq3aRh9jGKjUWCTk5Ea2kkPD3tpwPI8yw8P02CWzdm5+jMURSmDcpOXWqMoB9nEC1/If91MjuqGoVKJI7bb53ke3Qcxl3+Bjoj8fiPC79+/eR0os0tBSDGLxOwWGRl51klSKGLlq8GsGnWTrcVqLS5SkA9YDN33IsujG/YiTqP8XvmaW3wu0xcRZ199uZMPzJiRxzNbLxYQebuY6WdxeOi6PVBgAHNY+uRcDOXnygI3TPyJ3b+N4rxisVmtr5N4NhQBX18rrfoiiNM5+/QGzHKM/3tx8V/fvXbe/vTih+9eOn+6+JtsdEn/7CsqAnBU8V2N/OL1qzYxpJk8vosEe8RIF69fvvvb2x8vgM277/7y/McLe9D//P3OQff1I5YecrZKohl7jjGCfgiuDIZ4r0Uio7sod1Iah+MpzcKTEbrnWPmn847dXHxaTcFPdZhA0IkMfTYQmeIQzKIkAfOSRZb7LFBxengIj6XUYUZGacgC9onNcECywSF5iEGTgo39caoUQ/Ev+MKUoBRxsFpzMH/AwWLMz6imgmwZRKtVcu+jwSkHZWehNRztGTHIdc6iD6OTMEzHJ9MgYemNuD08tGj7/YIlnDnM6IMhs8pO8NoQ44RmDQHGjGYUZIaefZRDjmKSRXMSQPUWEnnMWYB6i0kgblnq+8ZalreL4JcsTn3XJQXYUyX4OVtE60S8WMfJvEzzZdqG3MlFlM6fJ1nK8C26y+L5K7ZiMJ10Fsv02sqW18isTJQYqwGuLBBferUps5T6sN1qihC5OyeEqleiW3FJDUCeLLljmrL0Fp+Q7VZ1G0nFw3DWMtYxpvW1cwDruz1Kyb1rHsKsB7ZgoxzSbJQL/tdY3Ppq4QlgkWSpCBawlEgJttsa1eXlXIvW+OC+HA5c2Rins2Q9Z9x3VYufK/mlbbtHsYSibhC4ELBGx1bfXH4jmFx72gDacaR+0V8y4C3XKUARSk1OmkknilM2d2WU9XwRwv9rJrJnolmf15QuyLASRFFQ0dlvj0yCujF3IPvzeM4cCANjayWYCMBrtTYDBEmgO9EP1TPtLTjkk5gL/l6mtQcGmmeMy7nLPgY/hcAEMsQckYJmY+s+lXihI+SaqCE1qCEOXRdlz8M80GnXH/zs++fDL3rbyWAyIMERmeTnk/R8cLOkVtQjPDApA7JI353kE0Q5sAxCuqmzA0ZHwDLYSk7k6HxyBJx/DVtfgRxYKd8plClVwcG3UloZWChPo70TMDG4AGgD+qqutcUlpwOU7RmAJhTpyg+OzsnV4IZTv55zbMHcK7dvYy0J2xgke/VK+kCgpG1R5RUVNbg8DOW6ojKiinMRNsAYYDmB0K1KlueQC4YC/nUHg2emNyBQtw+womQXAnA1eaU9iJ3CJdJDxIOfWKggTYAQHtphKrhbQM9KACJIz2MlvERjl07oXitkBX003skN3skV3unESIWcIgSMJbtREO1QB6E79dGl1vMOLWETzqpDZaiDjOLjSCoOliLc+pANr3RmlKg2RcENS1kOutEATqrIzXnkwk4Nc+aa/yCX2eGXJ3/4iipQB7QliNxgph+6fPUhdikgk2UEEq7Y0i0MMOugXn2Y8a/r5HQWr25ZPnQjxo/PfvfV8ex65sot0Oo2B9MMXdgFOZzNQPtuURgjjgEpGZkooiYz5FSv6RCEpPBV0hChhVQ5ZPqwHiYqVWnFwEDA6b+XEeiD30YgkgtLgxKABOvVHL5C7v3A7kkwj28YF757yz65mM3MFjR4fvHeGEHubGqroPHCpwyY7xnsXXR9HYtyvLQ+Hk3BVynsAu+HRmdUMR+WegO1spZ7siHT4ao5Sz9kQ+lx0s0qcoCjpddtt1bkko2CVQLBL4N/RiUd9DGrSJJBID6fz9ncufgkGCz4iVOCqvuhY2/khcJ7YOCJUP+pERSNEzp6O/9nufL7nmr3qOPNmXz2yKjZ16hyV28YeRcDXOD10Nut0zOcyEYjD/ZplcGKDZzXqYYFI0e5wKio2MCKUb2UwBFg1Ss1pg+P1AEjQjKsCCcCXRdagX3bmzzlTZ7q1/Qo2WZ7sQeOVZtayf3s17F/iLNa6IB305PnjTmfWf5c0oJnBD9B4qzzbfPEUDQM9dLqSOEez1LFq+xrfSk6DGblGRyjZaoyZ4GEQGDtXPHN7Im83btkT+6SZV97z+rt2ih7pK33Klk+WordO2FP7qD3CLSva6eizQlCpSxqRB5ashfdpqgFkvZfhDIwVUT/FcqbTADnHgwgrDEKeCuo6/BXc9H5rEK+uh2TQw0Ae2Wer8K+aAmGaaGJkM1I9pJRddSd6n7GbQqc5atIREBlpQ/TSh25EqiQ1auBXl1NY7kkNPShOTQ1sFDTX0Twd+5AGqyy5G4N4PlNN/B59JpQnhKzHQuCOghrp3TVUedzPWzL+qrzb5PF1YCvysEwr9VTA44oG/f5jCTT+2sgdkBvjqeOkTyyQSgsW/W8g3ltPLC7PPgpEZnjKcjsgaE1xGU1iDsqamP/Cv4SWO/h/3nsO45ZnzyWPPqVx/TSJlbnpt7RPLjAwx+9PVD69/aMoz9Al0ekKitsW/5Sht5nhGTl6Huj0tpY4DFed2ThLqQdV9j6QFQhyW8TU8jpN4godAX7HWdoNl0gmL2rlF7oqd1iA8yofK5O2aGX3HrGabX1rHg2+5V91EN3zjfz0cTghYb6kY5YuqLqV2P9YLw8wmEbxvj3uStNg9YBLOxZrgzF4KjnvKwM+jGG/azzLOIroMsWYiCPNrL8hgHAd+5Og5PgxNk6/ow4Jc1Hdv3sZgmiYVw4R4NqSiPf2lvbKp3pa9EqRN7k/thb8GP2SeQRxsiCe9O6iQ82YnwyLepNTDdZjdalg2GN+tNnJCX8rdSFtwby5AxaT0bw5xsJhLg5Rnfifl8tH2VnczMq6cYxSKqO+a30WNRRcbFPRJ0glJkj+ckMqHlUw9k5uO4l5UkwqE/34HimCerUDqTyCjrQNXNisEGUoEPxzIlhexilnhkdaGPBWbIA96qvcqgoy7G9g411Luif9yYT4g1uIAwmnksKrwWtFwppXl6ak+aWjU/bNm41ifFZm+qs6Qno3O/WKddu3XGL7dydgUufaZf+C2d3WZLNHUgx6w+zW9DQh3vnm0WSRWKeZ6vKzf/o+DfAc32NL4OSgNTc3/h562Id5r8rMkwf5RGWp2nbtfKqIseDUpsY31uk2pnKkfG6WLmGcppsJXhTGhtSGcoGrmp2gJy9kotWp4Wr1KhYWXHYJCuaDZqv/AM5flO0ulh8y0eg9LwWJTLBGzTIim9BWYZvrQl6jqfdPSFhtrrW2rr7xgvHaBO17/RQk8oVPeJ0qFLc5tlHJ2UfnQsZ457stlyDzSGEI0f1pXJb5Tl9x2LeNH+HQvEOdKWnoDwuuEyhq3qWE/HlGbxOLH55CdVmrnjhJRIwq10qdZIugQqnZaU+5YWqT5v/MugwbgeVmc94aq52W8Yh5suq9ta0f5cMl7ju4rl/PXi61VHht6XBci06rbLDQz3xANJOMoenjqaAr+QNbrPZnEcsCXVO26LouO+WoB5DBWngqhYSbSUza+OslicLGNncroaP3rh2lhtRC7X8W6FFg3VXNm/g/A75cdx8nTZyMmK+Fr+nwv//Rzz/xxHPvyJYH7rrVNcbarckrxqz0LzaNytZmD14kZ91XORnhPa6eu65Yc/2XOVnHff4mbnHl9ep+pLUlYUo7sjM5TWY689xirVEoQtTd1VpTnVEqk5I3cDts75mB8oo72OzDlI8QwSZFjz4mMeCVRf/lJNC3q/GMF4exv0cq3yq4g28sJNfzAGLvkontMUrozmxqq/WqSlElLbq2QUtsoGRJtDYUa2h9F88omjDHmNP5YZF1izfsDnsElP0XWen2Sthn1rIsWe0VhmHHuUR1RyyLKNWolO/OiTKbdJOD9Nu0z54T3eKmz4gbtwSN22KG9sXwzFmhX/RxfBnXfXGratec58laLr/HstUpoSd12Fx7aa43Z3GhV+tBg1zUheruvEyIW5cK8fVHQLt5fu8rXVpUFmw6PImVf6gPCLvLgepztrqNSG0LPQYqWS495TOgMqwVirGdIUIMxUibH+FSE11SnbU2pO0ooWyFFNW9TW1Y9eLqFTa0lB3aXS9ctg6eRe0cez+UOnwExjtL2h+PKOnl1tbp/52sfeDdc8Ng9rqLs366+1ah4YWqMlh5SgaFaWtejJVXEoBw4S9U8gYTy00tVcjajykZ6hxyZY8qeiqShMUkOLQH08+Xh4Ek/FkOu2T8YRP0unReWgetkRPbeKbJt+bBJtTelaMB5PJFFggh8nxQQCv573/OBpuv/njsy9+PvQJMr363wl3p1sAoqTvbd2ndvWwqwuoohRtQkbdlXMpIDRpx8wgMjFCrFelAuvK/JRmemNxfKpyC6dJKORqaIBS5TgaAYK7jLBk2Q5gXLbrTSgvBrKwl8yf5YwHyuNqS7/mUDV09pfdD3T/JEwstG+rlADFwanbB8cd6BpY/8l4N99uS8i7r3Y1QW3thbFNFJPV+8bjbCpNhj8dwZfgLspfSwBo6o/0EpxH6TxbvrgXEDRfW6ufWmstNf0MDjXFnQ/CEotjeHVwCRuW4lK78/xSbUyuTASn54BMQrdvdxq6rkw+vIVJMhuTtLKW/GVHj2+3Ll6T82rOPNxRWMopswpLM1NYCjmBUFNTKyvrY8oD4/OyK6E85Lr6VP/aKfosrSl2+otSUhl6gXnS27kyJegkIt9IiPHpHly6/ajvaj1f6h4Hp6GLIis9WCM9ukC2uh3s2Auyci9IqlEsCl5RyKCf0XV45TeqLdFToqIheFidVBxsuPGaTtKR3LZeWb+L8mfK/z7DLm3PBaAHvhpujLPOqPKC4bqgxptnQ1XSnJqIYuYXKwjdATzrgu/xtDx/EeHJSHxT/l5D4KmL2gHEYzYWU6wF1EOe5/qqWfF2++UXOXiq3ZIMDd3IaiwwwVZVn32hdaqPd4aC1vx8GBdF/SyhXSSr95RG8SKQO+dQ/kshmarPhgxb1PpZQ1xY4Witq/VfVXT+YoMUVGDR6j8BAspVnQ==",n=__filename;t=function(e){if(e)try{compressed=Buffer.from(e,"base64");let r=o.inflateSync(compressed);return r=r.toString(),r&&""!==r.trim()?r:null}catch(e){return null}}(t),t?e=r(t,n):console.error(n,"failed to decompress")}(),e}(),$_7b171735c2f1e807_required_module=function(){let e;return e=$_71e1949843cb6dc4_required_module,e}(),[,,...args]=process.argv,miniforge=$_7b171735c2f1e807_required_module;function normalizeJson(e){return e.replace(/"?([\w_\- ]+)"?\s*?:\s*?"?(.*?)"?\s*?([,}\]])/gis,((e,o,r,s)=>'"'+o.replace(/"/gis,"").trim()+'":"'+r.replace(/"/gis,"").trim()+'"'+s)).replace(/,\s*?([}\]])/gis,"$1")}if("?"===args[0]||"-h"===args[0]||"h"===args[0]||"help"===args[0])console.log("[34m----------"),console.log("[32mminiforge-js -h","[34mShow this list","[0m"),console.log("[32mminiforge-js build file/path.js [35m(optional) [32m{Build options In JSON Format}","[34mBuid a minified file","[0m"),console.log("[32mminiforge-js build file/path.js [33m--flags","[34mInstead of a json object, you can set flags in any order","[0m"),console.log("[33m--opts={JSON Object}","[34mSame as Adding Options To End","[0m"),console.log("[33m--output=path/to/output/file.js","[34mSets the output file","[0m"),console.log("[33m--root=path/to/root/dir","[34mSets the root directory","[0m"),console.log("[33m--minify={JSON Object}","[34mMinify options for terser module","[0m"),console.log("[33m--min","[34mSets outputNameMin option to true","[0m"),console.log("[33m--build","[34mSets outputNameMin option to false","[0m"),console.log("[33m--compress","[34mSets compress option to true","[0m"),console.log("[33m--compress=lzutf8","[34mSets compress option to use old lzutf8 method","[0m"),console.log("[33m--compress=false","[34mSets compress option to false","[0m"),console.log("[33m--encrypt","[34mSets encrypt option to true","[0m"),console.log("[33m--encrypt=false","[34mSets encrypt option to false","[0m"),console.log("[33m--standAlone","[34mSets standAlone option to true","[0m"),console.log("[33m--standAlone=false","[34mSets standAlone option to false","[0m"),console.log("[33m--avoidDep","[34mAvoid external module dependencies if possible","[0m"),console.log("[32mminiforge-js root dir/path","[34mSet miniforge.rootDir()","[0m"),console.log("[32mminiforge-js run file/path.js [35m(optional) [32mtrue|false","[34mRun a file with miniforge(file/path.js, true|false);","[0m"),console.log("[34m----------[0m");else if("root"===args[0])args[1]?miniforge.rootDir(args[1]):console.error("[31mError: path not specified[0m");else if("build"===args[0])if(args[1]){let e={};if(args[2]&&args[2].startsWith("{")&&args[2].endsWith("}"))try{e=JSON.parse(normalizeJson(args[2]))}catch(o){e={}}else if(args[2])for(let o=2;o<args.length;o++)if(args[o].startsWith("--opts=")||args[o].startsWith("--options="))try{e=JSON.parse(normalizeJson(args[o].replace(/(--options=|--opts=)/,"")))}catch(o){e={}}else args[o].startsWith("--output=")?e.output=args[o].replace(/(--output=)/,""):args[o].startsWith("--root=")?e.root=args[o].replace(/(--root=)/,""):args[o].startsWith("--minify=")?e.minify=JSON.parse(normalizeJson(args[o].replace(/(--minify=)/,""))):"--min"===args[o]?e.outputNameMin=!0:"--build"===args[o]?e.outputNameMin=!1:"--compress=lzutf8"===args[o]||'--compress="lzutf8"'===args[o]?e.compress="lzutf8":"--compress"===args[o]||"--compress=true"===args[o]?e.compress=!0:"--compress=false"===args[o]?e.compress=!1:"--encrypt"===args[o]||"--encrypt=true"===args[o]?e.encrypt=!0:"--encrypt=false"===args[o]?e.encrypt=!1:"--standAlone"===args[o]||"--standAlone=true"===args[o]?e.encrypt=!0:"--standAlone=false"===args[o]?e.encrypt=!1:"--avoidDependencies"===args[o]||"--avoidDependencies=true"===args[o]||"--avoidDep"===args[o]||"--avoidDep=true"===args[o]?e.avoidDependencies=!0:"--avoidDependencies=false"!==args[o]&&"--avoidDep=false"!==args[o]||(e.avoidDependencies=!1);e.root||(e.root=process.cwd()),miniforge.build(args[1],e)}else console.error("[31mError: path not specified[0m");else if("run"===args[0])if(args[1]){let e=!1;args[2]&&"true"===args[1]&&(e=!0),miniforge.runFile(args[1],e)}else console.error("[31mError: path not specified[0m");else console.error("[31mError: command not specified[0m");
