const e=require("fs"),t=require("path"),{minify:r}=require("terser"),n=require("lzutf8"),i=require("crypto"),o=require("crypto-js"),s=require("require-from-string");let c=void 0;const u={ecma:2020,parse:{ecma:2020},compress:{ecma:2020,keep_infinity:!0,module:!0,passes:5,top_retain:["module","global","return","process"],typeofs:!1},mangle:{keep_classnames:!0,module:!0,reserved:["module","global","return","process"]},module:!0,keep_classnames:!0};function l(e,t={}){let n={...u};Object.assign(n,t);let i=r(e,n);return i&&!i.error&&i.code?i.code:e}function a(e){return{public:e.substring(e.indexOf("-----BEGIN PUBLIC KEY-----")+26,e.lastIndexOf("-----END PUBLIC KEY-----")),private:e.substring(e.indexOf("-----BEGIN ENCRYPTED PRIVATE KEY-----")+37,e.lastIndexOf("-----END ENCRYPTED PRIVATE KEY-----"))}}const f={compress:!0,standAlone:!0};function p(r,s={}){if(s.root&&"string"==typeof s.root||(s.root=void 0),s.root)s.root=t.resolve(s.root.toString())||void 0;else if(c&&"string"==typeof c)s.root=t.resolve(c.toString());else if(r&&"string"==typeof r){let e=r.toString();e.startsWith(module.parent.filename)||e.startsWith(__dirname)||e.startsWith("C:/")||e.includes(":/")||(e=t.join(module.parent.filename.toString(),"..",e)),s.root=t.join(e,"..")}if(!s.root)return void console.error("rootDir not defined");if(!(r=(r=r.toString()).startsWith(s.root)?t.resolve(r):t.join(s.root,r)).startsWith(s.root))return void console.error(r,"is outside the rootDir");if(r.endsWith(".js")||(r+=".js"),!e.existsSync(r))return void console.error(r,"does not exist");let u=e.readFileSync(r).toString(),p={...f};if(Object.assign(p,s),u=function r(n,o={},s,u=!1,a={}){if(o.root&&"string"==typeof o.root||(o.root=c),"object"!=typeof a&&(a={}),n=n.replace(/(?:([\w_$.\[\]]+)[\s\n]*?=[\s\n]*?|)require\([\s\n]*?('\.{1,2}[/\\](?:[\w_\-$./\\?!%*:|<>@#^&()\[\]`~\s"]|\\')+'|"\.{1,2}[/\\](?:[\w_\-$./\\?!%*:|<>@#^&()\[\]`~\s']|\\")+")[\s\n]*?\);/gs,(function(n,c,u){if(!u)return n;u=u.toString().substring(1,u.length-1);let f=n;if(s){let e=s.replace(o.root,"");(e.startsWith("/")||e.startsWith("\\"))&&(e=e.replace(/^[/\\]/,"")),(e.endsWith("/")||e.endsWith("\\"))&&(e=e.replace(/[/\\]$/,"")),f=f.replace(/(\.{1,2}[/\\])/,"$1"+e+"/")}if(!(u=u.startsWith(o.root)?t.resolve(u):t.join(s||o.root,u)).startsWith(o.root))return f;if(u.endsWith(".js")||(u+=".js"),!e.existsSync(u))return f;if(a[u]){if(c&&!a[u].varName){const e=i.randomBytes(8).toString("hex").replace(/[^\w_]/g,"");a[u].varName=`$_${e}_required_module`}return c?c+"="+a[u].varName:""}let p=void 0;try{p=e.readFileSync(u).toString()}catch(e){return f}if(!p||""===p)return f;p=r(p,o,t.join(u,".."),!1,a),Object.apply(a,p.functionFiles),p=p.result;const d=i.randomBytes(8).toString("hex").replace(/[^\w_]/g,"");p=p.replace(/module[\s\n]*?\.[\s\n]*?exports[\s\n]*?([\w_$.\s\n]*)=/gs,"$_"+d+"_module_exports$1="),p=p.replace(/\/\*@min\*\/`(.*?)`/gs,(function(e,t){return l(t,o.minify)})),p=l(p,o.minify);let y=`(function(){let $_${d}_module_exports=undefined;${p}return $_${d}_module_exports;})();`,m=void 0;return c&&(m=`$_${i.randomBytes(8).toString("hex").replace(/[^\w_]/g,"")}_required_module`),a[u]={varName:m,result:y},c?c+"="+m:""})),u){const e=Object.keys(a);let t=[];for(let r=0;r<e.length;r++){let n=a[e[r]];n.varName?t.push("const "+n.varName+"="+n.result):t.push(";"+n.result)}n=t.join("\n")+n}return{result:n,functionFiles:a}}(u,p,t.join(r,".."),!0).result,u=u.replace(/\/\*@min\*\/`(.*?)`/gs,(function(e,t){return"`"+l(t,p.minify)+"`"})),u=l(u,p.minify),p.compress){let e=function(e,t){if(e){if("object"==typeof e||Array.isArray(e))try{e=JSON.stringify(e)}catch(e){return null}try{e=n.compress(e,{outputEncoding:"StorageBinaryString"})}catch(e){return null}try{e=n.compress(e,{outputEncoding:"Base64"})}catch(e){return null}return e}}(u);e&&p.standAlone?u=e:e&&(u="//@compressed:"+e)}let d,y=!1;if(p.encrypt){y=function(){let e=i.generateKeyPairSync("rsa",{modulusLength:4096,publicKeyEncoding:{type:"spki",format:"pem"},privateKeyEncoding:{type:"pkcs8",format:"pem",cipher:"aes-256-cbc",passphrase:"top secret"}});return[e.publicKey,e.privateKey].join("\n")}();let e=a(y),t=function(e,t){let r=i.createHmac("sha256",t.secret).update(t.key).digest("hex"),n=o.AES.encrypt(e,r).toString();return r=i.createHmac("sha256",t.secret).update(r).digest("hex"),n=o.Rabbit.encrypt(n,r).toString(),n}(u,{key:e.public,secret:e.private});t&&p.standAlone?u=t:t?u="//@encrypted:"+t:y=!1}if(p.standAlone&&(p.encrypt||p.compress)){const e=[],t=[];p.encrypt&&e.push("\n            const crypto = requireModule('crypto', 'decrypt');\n            const CryptoJS = requireModule('crypto-js', 'decrypt');\n            if(!crypto || !CryptoJS){module.exports = undefined; return;}\n            ","\n            function strDecrypt(str, keys){\n                let key = crypto.createHmac('sha256', keys.secret).update(keys.key).digest('hex');\n                let key2 = crypto.createHmac('sha256', keys.secret).update(key).digest('hex');\n                let result = CryptoJS.Rabbit.decrypt(str, key2).toString(CryptoJS.enc.Utf8);\n                result = CryptoJS.AES.decrypt(result, key).toString(CryptoJS.enc.Utf8);\n                return result;\n            }\n            function getKeyPair(key){\n                let publicKey = key.substring(key.indexOf('-----BEGIN PUBLIC KEY-----')+26, key.lastIndexOf('-----END PUBLIC KEY-----'));\n                let privateKey = key.substring(key.indexOf('-----BEGIN ENCRYPTED PRIVATE KEY-----')+37, key.lastIndexOf('-----END ENCRYPTED PRIVATE KEY-----'));\n                return {public: publicKey, private: privateKey};\n            }\n            ","\n            let keyFile = file.replace(/\\.js$/, '.keys');\n            if(!fs.existsSync(keyFile)){console.error(keyFile, 'does not exist');return undefined;}\n            let keys = fs.readFileSync(keyFile).toString();\n            keys = getKeyPair(keys);\n            fileData = strDecrypt(fileData, {key: keys.public, secret: keys.private});\n            if(!fileData){console.error(file, 'failed to decrypt');return undefined;}\n            "),p.compress&&t.push("\n            const LZUTF8 = requireModule('lzutf8', 'decompress');\n            if(!LZUTF8){module.exports = undefined; return;}\n            ","\n            function strDecompress(str){\n                if(!str){return undefined;}\n                if(typeof str === 'object'){try{str = LZUTF8.decompress(str, {inputEncoding: 'Buffer'});}catch(e){return null;}}\n                try{str = LZUTF8.decompress(str, {inputEncoding: 'Base64'});}catch(e){return null;}\n                try{str = LZUTF8.decompress(str, {inputEncoding: 'StorageBinaryString'});}catch(e){return null;}\n                try{str = JSON.parse(str);}catch(e){}\n                return str;\n            }\n            ","\n            fileData = strDecompress(fileData);\n            if(!fileData){console.error(file, 'failed to decompress');return undefined;}\n            "),u=`\n        ;(function(){\n            const fs = requireOr(['fs-extra', 'fs']);\n            ${e[0]}\n            ${t[0]}\n            const requireFromString = requireModule('require-from-string', 'run');\n            if(!requireFromString){module.exports = undefined; return;}\n            function requireOr(files){let result = undefined;for(let i = 0; i < files.length; i++){try{result = require(files[i]);break;}catch(e){}}return result;}\n            function requireModule(file, action){try{return require(file);}catch(e){console.error(__dirname, 'requires the', file, 'module to be installed so it can', action, 'itself');}}\n            let fileData = '${u.replace(/(?!\\)'/g,"\\'")}';\n            let file = __filename;\n            ${e[1]}\n            ${t[1]}\n            ${e[2]}\n            ${t[2]}\n            module.exports = requireFromString(fileData, file);\n        })();\n        `,u=l(u,p.minify)}if(p.output){if(d=p.output.toString(),d=d.startsWith(s.root)?t.resolve(d):t.join(s.root,d),!d.startsWith(s.root))return void console.error(d,"is outside the rootDir");d.endsWith(".js")||(d+=".js")}else{let e="build";p.outputNameMin&&(e="min"),d=r.replace(/\.js$/,"."+e+".js")}if(y){let t=d.replace(/\.js$/,".keys");e.writeFileSync(t,y)}e.writeFileSync(d,u)}function d(r,u){if(!c){if(!u)throw new Error("rootDir not defined");return}if(!(r=(r=r.toString()).startsWith(c)?t.resolve(r):t.join(c,r)).startsWith(c)){if(!u)throw new Error(r+" is outside the rootDir");return}if(r.endsWith(".js")||(r+=".js"),!e.existsSync(r)){if(!u)throw new Error(r+" does not exist");return}let l=e.readFileSync(r).toString();if(l.startsWith("//@encrypted:")){let t=r.replace(/\.js$/,".keys");if(!e.existsSync(t)){if(!u)throw new Error(t+" does not exist");return}let n=e.readFileSync(t).toString();if(n=a(n),l=function(e,t){let r=i.createHmac("sha256",t.secret).update(t.key).digest("hex"),n=i.createHmac("sha256",t.secret).update(r).digest("hex"),s=o.Rabbit.decrypt(e,n).toString(o.enc.Utf8);return s=o.AES.decrypt(s,r).toString(o.enc.Utf8),s}(l.replace("//@encrypted:",""),{key:n.public,secret:n.private}),!l){if(!u)throw new Error(r+" failed to decrypt");return}}if(!l.startsWith("//@compressed:")||(l=function(e){if(e){if("object"==typeof e)try{e=n.decompress(e,{inputEncoding:"Buffer"})}catch(e){return null}try{e=n.decompress(e,{inputEncoding:"Base64"})}catch(e){return null}try{e=n.decompress(e,{inputEncoding:"StorageBinaryString"})}catch(e){return null}try{e=JSON.parse(e)}catch(e){}return e}}(l.replace("//@compressed:","")),l))return s(l,r);if(!u)throw new Error(r+" failed to decompress")}module.exports=function(){let e=d;return e.build=p,e.runFile=d,e.rootDir=function(e){e&&(c=t.resolve(e.toString())||void 0)},e}();